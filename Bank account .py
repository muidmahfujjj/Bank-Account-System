{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"72Gq_8ssDuqc"},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Bank Account Management System\n","1. Create a new account\n","2. View account details\n","3. Deposit money\n","4. Withdraw money\n","5. Exit\n","Account created successfully!\n","\n","Bank Account Management System\n","1. Create a new account\n","2. View account details\n","3. Deposit money\n","4. Withdraw money\n","5. Exit\n","Account Number: 1234, Account Holder: muid, Balance: 1.0\n","\n","Bank Account Management System\n","1. Create a new account\n","2. View account details\n","3. Deposit money\n","4. Withdraw money\n","5. Exit\n"]}],"source":["class BankAccount:\n","    def __init__(self, account_number, account_holder, initial_balance=0.0):\n","        self.account_number = account_number\n","        self.account_holder = account_holder\n","        self.balance = initial_balance\n","\n","    def deposit(self, amount):\n","        if amount \u003e 0:\n","            self.balance += amount\n","            print(f\"Deposited {amount}. New balance is {self.balance}.\")\n","        else:\n","            print(\"Deposit amount must be positive.\")\n","\n","    def withdraw(self, amount):\n","        if amount \u003e 0:\n","            if amount \u003c= self.balance:\n","                self.balance -= amount\n","                print(f\"Withdrew {amount}. New balance is {self.balance}.\")\n","            else:\n","                print(\"Insufficient funds.\")\n","        else:\n","            print(\"Withdrawal amount must be positive.\")\n","\n","    def get_details(self):\n","        return f\"Account Number: {self.account_number}, Account Holder: {self.account_holder}, Balance: {self.balance}\"\n","\n","def main():\n","    accounts = {}\n","\n","    while True:\n","        print(\"\\nBank Account Management System\")\n","        print(\"1. Create a new account\")\n","        print(\"2. View account details\")\n","        print(\"3. Deposit money\")\n","        print(\"4. Withdraw money\")\n","        print(\"5. Exit\")\n","\n","        choice = input(\"Enter your choice: \")\n","\n","        if choice == '1':\n","            account_number = input(\"Enter account number: \")\n","            account_holder = input(\"Enter account holder name: \")\n","            initial_balance = float(input(\"Enter initial balance: \"))\n","            accounts[account_number] = BankAccount(account_number, account_holder, initial_balance)\n","            print(\"Account created successfully!\")\n","\n","        elif choice == '2':\n","            account_number = input(\"Enter account number: \")\n","            if account_number in accounts:\n","                print(accounts[account_number].get_details())\n","            else:\n","                print(\"Account not found.\")\n","\n","        elif choice == '3':\n","            account_number = input(\"Enter account number: \")\n","            if account_number in accounts:\n","                amount = float(input(\"Enter amount to deposit: \"))\n","                accounts[account_number].deposit(amount)\n","            else:\n","                print(\"Account not found.\")\n","\n","        elif choice == '4':\n","            account_number = input(\"Enter account number: \")\n","            if account_number in accounts:\n","                amount = float(input(\"Enter amount to withdraw: \"))\n","                accounts[account_number].withdraw(amount)\n","            else:\n","                print(\"Account not found.\")\n","\n","        elif choice == '5':\n","            print(\"Exiting the system. Goodbye!\")\n","            break\n","\n","        else:\n","            print(\"Invalid choice. Please try again.\")\n","\n","if __name__ == \"__main__\":\n","    main()\n"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyOQkzslJ5whr+GKg5toAnzn","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}